== Agile and the IT4IT framework


As IT4IT is process and methodology agnostic, DevOps can be mapped into
the reference architecture (Figure 4, Figure 5)

image:../images/image007.png[image]

Figure 4. DevOps across the IT value streams

image:../images/image008.png[image]

Figure 5. Agile concerns across the IT4IT reference architecture

As we can see in Figure 5, Agile concerns cross the IT4IT framework:

* Enterprise architecture and portfolio backlog

* Automation as design criteria

* Requirements as defects as combined product backlog

* Automated build process

* Automated testing

* Infrastructure as code and automated? deployment

* Event feedback to product backlog

* Automatic configuration updates

Â 

== Agile and frameworks

There will likely be concerns from the Agile community about the role, purpose, and desirability of any framework purporting to address some aspect of Agile. It may seem paradoxical to position a framework to assist a philosophy that values processes, tools, and comprehensive documentation _less_. However, the Agile Manifesto clearly states that _there is value on the right_.

Some notes:

First, Agile authors, case studies and presentations provide a wealth of tangible objectives that can inform the development of a reference architecture.

IT4IT is not a methodology. It is not primarily concerned with how work is done. This distinguishes it from CMMI(c), ITIL(c), SAFe(c), Scrum(c), and so forth.

It is a _framework_ and _prescriptive_ in the sense of it being a
reference model. It is _prescriptive_ in the same sense that design patterns are prescriptive -- they prescribe a solution, but still need to be applied correctly.

Frameworks can be implementation methods or reference models. IT4IT is a reference model and as such, similar to the patterns literature [link:REF_17[17-26]].

IT4IT as a standard is primarily intended for large enterprise IT
organizations. The intent is to enable loosely coupled, decentralized Agile teams by prescribing simple IT coordination interfaces supporting accepted Agile implementation patterns, informed by documented Agile principles, providing end to end traceability of IT services.

IT4IT may become prescriptive in a tighter sense when applied to IT management tool interoperability. Enabling such interoperability would hopefully be viewed positively by the Agile community. The framework has value even without that, just as eTOM's value is not only in standardizing interfaces. However, IT4IT is NOT prescribing particular tools, practices, or methods.

Also, Agile/Lean has a strong emphasis on culture and organizational change management. Such concerns are outside the purview of IT4IT, in general.
