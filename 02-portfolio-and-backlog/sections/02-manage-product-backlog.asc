= Scenario -- Manage Product Backlog
======================
:numbered!:

== Scenario introduction


New product backlog items can come from multiple sources, but should all
be captured in a single repository for an individual IT service. The
business may ask for enhancements to existing products, IT may identify
known errors or operational issues that need to be remedied; there may
be other defects in the products which need to be resolved.?

== Requirements


[width="100%",cols="10%,90%",]
|========
|*ID* |*Requirement*

|REQ.05 a|
Ability to capture new enhancement requests or updates to existing
enhancement requests in the product backlog

* IT Service

* Summary

* Description

* Status

* Priority

|REQ.06 a|
Ability to add/modify unfulfilled requirements on the product backlog
for an IT service

* IT Service

* Summary

* Description

|REQ.07 a|
Ability to add/modify open project defects which are not resolved prior
to go live on the product backlog for an IT service

* IT Service

* Summary

* Description

|REQ.08 a|
Ability to add/modify known errors to the product backlog for an IT
service

* IT Service

* Summary

* Description

|========

 

== Process flow

image:../images/image014.png[image]

[width="90%",cols="3,1,4"]
|========
|*Process* 2+|*Requirements*
|*Log IT Request* |REQ.05

|_Anyone in the organization can ask for a product to be enhanced.? These
requests need to be tracked in the product backlog which should exist
for the entire lifecycle of the product.? The system should be able to
track key information about the request such as the summary and
description, status, and priority. The status should reflect information
about the request such as if it is new, approved, rejected, or in
process.? The priority of the request should indicate impact to the
organization and reflect an order of importance with respect to other
items in the product backlog.? The product backlog should be able to be
mapped to portfolio backlog items which are used to obtain approval by
the business to fund an effort.? Many companies have a standing
portfolio backlog item representing a pre-approved fund to enhance a
product based on the product owner?s discretion as delegated by the
business. _

|*Record Open Requirements in Product Backlog* |REQ.06

|_There are times where requirements which were in scope for the project
are unable to be met during the course of a project.? In these cases,
those requirements should remain in an open status in the system so they
can be grouped into a future release of the IT service.? The project or
delivery team is responsible to make sure the unfulfilled requirements
are reflected in the product backlog._

| *Record Open Defect in Product Backlog* |REQ 07

|_There are times where a project defect is not so severe as to prevent
the release of an IT service.? In these cases, the defect still needs to
be resolved in a future release and should be added to the product
backlog so it can be implemented in the future. The project or delivery
team is responsible to make sure the open defects are captured in the
product backlog._

| *Record Open Known Error in Product Backlog* | REQ 08

|_When a problem is identified with an IT service, and the root cause is
determined highlighting the need for a change to the IT service, that
known error should be reflected in the product backlog so it can be
implemented in the future. The problem manager is responsible for
capturing known errors in the product backlog._

|========

[width="100%",cols="1,4",]
|========
|*Goal* |*Explanation*

|*G01, G05* |A product backlog should exist for an IT Service throughout
the service lifecycle. Since requests can come from many different
sources such as the business and IT (projects and operations), it is
important to have a single list (product backlog) of all potential
changes to the IT service so the changes can be planned
comprehensively. This promotes including operational changes and
business changes in releases of an IT Service which ultimately reduces
the cost and effort as multiple items can be resolved with one project
or initiative, thus preventing the ramp up and deployment costs
associated with multiple projects or initiatives to do the same.

|*G02, G06* |Many different software development methodologies may be
used to create or enhance an IT service. Since we share resources among
our delivery teams, and since different resources may work on various
changes to various IT services, it is critical that some key information
is stored in a similar fashion without regard to which methodology may
be used on a given project/effort. By storing the data in the same
repository and IT service, it then becomes a delivery team determination
on how best to meet the needs of a given project/initiative. There is
also not time lost between modifying data to fit one methodology or
another.

|*G02, G07* |By adding end user change requests, open items from the
project delivery process, and open items from operational processes into
a single repository, it allows the delivery team to go to a single
centralized repository to see the details (or links to details) of all
in scope items thus reducing time to otherwise review and consolidate
various repositories.
|========


=== Automation Specification using the Reference Architecture

The product backlog is a subset of requirements which are prioritized,
associated with releases, and track status.? Requirements come from
business demand, defects, and known errors.?

The reference architecture supports the system of record functional
components for requirement, defect, and problem which ultimately are the
source of the individual items comprising the product backlog.?

The requirement functional component becomes a key integration point
between the Strategy to Portfolio and Requirement to Deploy value
streams.

=== Essential Services supporting the scenario

Is there an issue with application components containing app services?
Vasu raised this on the DevOps diagrams.

image:../images/image015.png[image]

=== Artifacts and the essential attributes

image:../images/image016.png[image] +

=== Detailed explanation on Reference Architecture usage. +

image:../images/image017.png[image]

[width="100%",cols="34%,33%,33%",]
|========
|*Artifact* |*Attributes* |*Additional Information*

|*Requirement* |ID |Unique ID of requirement

|* * |IT Service ID/Name |This needs to be at least the IT Service name,
but ideally it would be the IT Service ID and the service name

|* * |Summary |This would represent the short description/title/summary
of a given requirement

|* * |Description |This would be the full description, ideally supports
rich text

|* * |Backlog priority |This priority is unique across all backlog items
for a single IT service

|* * |Backlog status |This status shows the state of the backlog item ?
considered if status should be pushed back to other systems of record ?
if so, may want to simplify and standardize the status values, and have
another attribute of detailed status or something which could be more
configured by firm/company.

|*Defect* |ID |Unique ID of defect

|* * |IT Service |This needs to be at least the IT Service name, but
ideally it would be the IT Service ID and the service name

|* * |Summary |This would represent the short description/title/summary
of a given defect

|* * |Description |This would be the full description, ideally supports
rich text

|*Known Error* |ID |Unique ID of known error

|* * |IT Service |This needs to be at least the IT Service name, but
ideally it would be the IT Service ID and the service name

|* * |Summary |This would represent the short description/title/summary
of the known error

|* * |Description |This would be the full description, ideally supports
rich text
|========
