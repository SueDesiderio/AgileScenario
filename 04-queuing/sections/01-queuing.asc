

4.5    Kanban scenario
~~~~~~~~~~~~~~~~~~~~~~

A critical concern for Agile product development is identifying where
queues are prescribed, and therefore where work in process may
accumulate and where demand is expressed for the end user. As Don
Reinertsen notes [link:REF_4[4]],

_Queues matter because they are economically important, they are poorly
managed, and they have the potential to be much better managed. Queues
profoundly affect the economics of product development (IT services are
a form of product). They cause valuable work products to sit idle,
waiting to access busy resources. This idle time increases inventory,
which is the root cause of many other economic problems._

_Queues hurt cycle time, quality, and efficiency. Despite their economic
importance, queues are not managed in today's development processes. Few
product developers are aware of the causal links between high
capacity-utilization, queues, and poor economic performance. Instead,
developers assume that their cycle times will be faster when resources
are fully utilized. In reality, high levels of capacity utilization are
actually a primary cause of long cycle time_

Manufacturing companies use Operations theory to identify bottlenecks
and eliminate them - they've identified the value chain is only as good
as the weakest link (or weakest capacity). Little's Law and associated
rules can be adopted for modeling the service value chain and eliminate
both bottlenecks and waste.

The Kanban movement is responding to this by essentially centralizing
heterogeneous demand into simplified, common queuing mechanisms. A given
team?s Kanban board may encompass Requirements, Changes, Service
Requests, Work Orders, and even Incidents and Problems - anything that
results in someone spending some time on it. Which of these the Kanban
board includes depends on the context and function(s) of the team in
question.

 

image:../images/image024.png[image]

Figure 7. Heterogeneous Kanban board

This industry direction, while clear, remains largely undocumented. The
reader is referred to Ian Carroll?s website IT Ops Kanban
[link:REF_38[38]] and the 2014 presentation by ING Bank, ?ITIL? ?and
DevOps at war in the enterprise.? [link:REF_39[39]]? In that
presentation, one of the presenters specifically discourages the use of
a Problem ticket in a Service Management tool if the Problem is also a
user story. ?Similar themes can be found in Kim?s _The Phoenix Project_
[link:REF_15[15]] and in Limoncelli?s __The Practice of Cloud System
Administration__. ?Development and operations can best speak the same
language by using the same tools wherever possible. This can be as
simple as using the same bug-tracking system for both development and
operations/ deployment issues? __ [link:REF_40[40]], p. 184.

The IT4IT reference architecture therefore explicitly identifies the
functional components that imply queues and is working towards a
logically unified queuing interface so that demand may be understood
globally across the IT value chain. Some initial requirements for this
might be:

?         A view of unified demand should be possible via integrating
all queues

?         All functional components that contain queues should be
identified

?         Cumulative flow visibility should be enabled

?         They should have common aggregation into BI

?         Smaller ?silo? queues need to be integrated into longer,
cross-functional, higher value queues

?         Within a project, have a common backlog for development and
infrastructure tasks

The possibility should be explored of defining an abstract queueing
interface, specifying which objects implement it. _[Note: Did the
Workflow Management Coalition do something like this?]_

Here is a high level representation of IT4IT functional components
possibly containing queues:

image:../images/image025.png[image]

_Lars comment: The use of RFC?s as a way of controlling what is planned
to be changed, have a log of change that happened, and to govern
approving change (especially w.r.t. risk, conflicts, change windows, ?).
This use is largely not used by existing Agile projects, but they
instead have a concept of release control that understand the status of
a release (and the ability to turn on or off features based on status)_

ESITs for all queue based systems

Aspect orientation

 +
 what are the top-down drivers +
 +
 how it works in the pure agile community vs waterfall vs hybrid

 +
 

 

 

[width="100%",cols="34%,33%,33%",]
|==================================================
|*Artifact* |*Attributes* |*Additional Information*
|*Interaction* |ID | 
|* * |? | 
|*Incident* |ID | 
|* * |? | 
|* * |  | 
|==================================================

 

 

 

 

 +
 

5      Proposed Changes to the Reference Architecture
-----------------------------------------------------

 
^

[width="100%",cols="34%,33%,33%",]
|=======================================================================
|*ID* |*Proposed Change* |*Status*

|*1* a|
Add new attributes to portfolio backlog item within the Portfolio Demand
component as follows:

?         ID

?         Portfolio

?         Summary

?         Description

?         Backlog Status

?         Backlog Priority

?         Proposed Budget

?         Fiscal Year

?         IT Service ID/Name

?         Requirement ID

?         Scope Agreement ID

 a|
Proposed

 

|*2* a|
Add new attributes to conceptual service within the Service Portfolio
component as follows:

?         ID

?         Name

?         Description

 a|
Proposed

 

|*3* a|
Add new attributes to requirement within the Requirement component as
follows:

?         ID

?         IT Service ID/Name

?         Summary

?         Description

?         Backlog Status

?         Backlog Priority

?         Portfolio Backlog ID

 |Proposed

|*5* a|
Add new attributes to defect within the Defect functional component as
follows:

?         ID

?         IT Service ID/Name

?         Summary

?         Description

 |Proposed

|*6* a|
Add new attributes to known error in the Problem functional component as
follows:

?         ID

?         IT Service ID/Name

?         Summary

?         Description

 |Proposed

|*7* a|
Add new attributes to scope agreement in the Proposal component as
follows:

?         ID

?         Portfolio Backlog Item ID

?         IT Service ID/Name

?         Summary

?         Description

 |Proposed
|=======================================================================

 
